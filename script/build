#!/usr/bin/env bash
# Build the project's product(s).
#
# Copyright (c) 2022 Johannes Krohn <jkrohn@cisco.com>
# License: MIT


set -e
cd "$(dirname "$0")/.."


# Default build
all=true


# Process Script Arguments
for i in ${@}; do
    case ${i} in
        package)
        all=
        package=true
        ;;

        docs)
        all=
        docs=true
        ;;

        types)
        all=
        types=true
        ;;

        async)
        all=
        async=true
        ;;

        methref)
        all=
        methref=true
        ;;

        apib)
        all=
        apib=true
        ;;

        oas)
        all=
        oas=true
        ;;

        *)
        echo "Unknown argument: $i"
        exit 1
        ;;
    esac
done


if [ ${all} ]; then
  echo "==> Cleaning previous build artifacts"
  script/clean
fi

if [ ${all} ] || [ ${types} ]; then
    echo "==> Creating types.py"
    script/all_types.py
fi


if [ ${all} ] || [ ${methref} ]; then
    echo "==> Creating method_ref.rst"
    script/method_ref.py
fi

if [ ${all} ] || [ ${async} ]; then
    echo "==> Creating as_api.py"
    script/async_gen.py
fi


if [ ${all} ] || [ ${docs} ]; then
    echo "==> Building the Docs"
    make -C docs clean
    rm -f docs/apidoc/*.rst
    sphinx-apidoc -o docs/apidoc -f -e -M wxc_sdk 'wxc_sdk/all_types.py'
    make -C docs html
fi


# Project build steps
if [ ${all} ] || [ ${package} ]; then
    echo "==> Building the Source Distribution package"
    poetry build
fi

if [ ${oas} ]; then
    echo "==> Creating Python sources from OAS files"
    script/oas2py.py --cleanup
    script/oas2py.py --with-examples
fi

if [ ${apib} ]; then
    echo "==> Creating Python sources from APIB files"
    script/apib2py.py "*.apib" --exclude "attachment-actions|meeting-preferences" --with-examples
fi

